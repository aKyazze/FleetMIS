# Generated by Django 4.2.11 on 2025-05-13 08:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('driver_name', models.CharField(max_length=50)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=2)),
                ('contact', models.CharField(max_length=20)),
                ('email_address', models.EmailField(max_length=254)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_provider_name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('contact', models.CharField(max_length=15)),
                ('email_address', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_plate', models.CharField(max_length=20, unique=True)),
                ('vehicle_type', models.CharField(choices=[('Saloon', 'Saloon Car'), ('SUV', 'SUV (Sport Utility Vehicle)'), ('Pickup', 'Pickup Truck'), ('Truck', 'Cargo Truck'), ('Lorry', 'Lorry'), ('Minibus', 'Minibus'), ('Tipper', 'Tipper Truck'), ('Trailer', 'Trailer'), ('Motorcycle', 'Motorcycle'), ('Van', 'Van'), ('DoubleCab', 'Double Cabin'), ('Tractor', 'Tractor'), ('FuelTanker', 'Fuel Tanker')], max_length=20)),
                ('mileage', models.PositiveIntegerField()),
                ('engine_type', models.CharField(choices=[('GAS', 'Gasoline'), ('HYB', 'Hybrid'), ('DIS', 'Diesel'), ('ELE', 'Electric')], max_length=4)),
                ('status', models.CharField(choices=[('Available', 'Available'), ('Allocated', 'Allocated')], default='Available', max_length=9)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact', models.CharField(max_length=15)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='userprofile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('particular', models.TextField()),
                ('quantity', models.PositiveIntegerField()),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('service_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fleetApp.serviceprovider')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fleetApp.vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='Requestor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('contact', models.CharField(max_length=20)),
                ('email_address', models.EmailField(max_length=254)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_date', models.DateField(auto_now_add=True)),
                ('required_date', models.DateField(help_text='Date by which vehicle is required')),
                ('current_location', models.CharField(max_length=50)),
                ('destination', models.CharField(max_length=50)),
                ('purpose', models.CharField(max_length=100)),
                ('time_of_allocation', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('request_status', models.CharField(choices=[('P', 'Pending'), ('O', 'Open'), ('C', 'Closed')], default='P', max_length=1)),
                ('mileage_at_assignment', models.IntegerField(blank=True, null=True)),
                ('mileage_at_return', models.IntegerField(blank=True, null=True)),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='requests', to='fleetApp.driver')),
                ('requestor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to=settings.AUTH_USER_MODEL)),
                ('vehicle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='fleetApp.vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='GSMsensorData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sensor_type', models.CharField(choices=[('Speed', 'Speed'), ('Location', 'Location'), ('Fuel', 'Fuel Level'), ('Engine', 'Engine Temp')], max_length=20)),
                ('data_value', models.FloatField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('transmission_mode', models.CharField(choices=[('SMS', 'SMS'), ('GPRS', 'GPRS'), ('USSD', 'USSD'), ('Email', 'Email')], max_length=10)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fleetApp.vehicle')),
            ],
        ),
        migrations.AddField(
            model_name='driver',
            name='vehicle',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='fleetApp.vehicle'),
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('Low Fuel', 'Low Fuel'), ('Overspeed', 'Overspeeding'), ('High Temp', 'Engine Overheat')], max_length=50)),
                ('alert_message', models.TextField()),
                ('trigger_source', models.CharField(max_length=20)),
                ('priority_level', models.CharField(choices=[('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low')], max_length=10)),
                ('recipient_role', models.CharField(max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('sensor_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fleetApp.gsmsensordata')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fleetApp.vehicle')),
            ],
        ),
    ]
